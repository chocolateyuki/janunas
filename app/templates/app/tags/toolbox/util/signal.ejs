<script>
	var self = this;
	
	var for_what =	function (opts) {
						return opts .for;
					};
	var what_for =	function (opts) {
						if (opts .what)
							return opts .what;
						var object = without ('for') (opts);
						for (var key of Object .keys (object)) {
							var value = object [key];
							delete object [key];
							
							var parts = key .split ('__');
							var anchor = object;
							for (var part of parts .slice (0, -1)) {
								if (! anchor [part])
									anchor [part] = {};
								anchor = anchor [part];
							}
							anchor [parts .reverse () [0]] = value;
						}
						return object
					};
	
	self .stuff .trigger (for_what (opts), what_for (opts));
	
	self .on ('mount', function () {
		var element = self .root;
		if (element .getAttribute ('update') != undefined) {
			element .removeAttribute ('update');
			self .on ('update', 
				function () {
					self .stuff .trigger (for_what (opts), what_for (opts));
				}
			);
		}
	});
</script>
