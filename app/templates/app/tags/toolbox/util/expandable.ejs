<div class="expand-box">
	<span class="text-icons expand-cue">{ recalls ('_expand-cue-icon') }</span>
	<yield from="expandable"></yield>
</div>
<toolbox-util-if if_={ recalls ('$expanded') }>
	<yield from="to-expand"></yield>
</toolbox-util-if>

<style>
	<%-tag%> .expand-cue {
		font-size: 35px;
		margin: 0 auto;
		text-align: center;
		vertical-align: middle;
		width: 1em;
		line-height: 1em;
		left: 5px;
		top: 5px;
		position: absolute;
		color: #000;
	    opacity: 0.3;
	   	
		/*transition: transform 0.05s;*/
		z-index: 9999;
	}
	
	<%-tag%> {
	    position: relative;
	    display: block;
		z-index: 999;
	}
	<%-tag%>.item {
		z-index: 999;
	    margin: 0;
	}
	
	<%-tag%> .expand-box {
		display: block;
		
		background: rgba(255,255,255,0.1);
		/*border: 1px #bbb solid;
		border-radius: 5px;*/
	}
	toolbox-util-draggable <%-tag%> .expand-box{
	    background: none;
	    border: 0;
	}
</style>

<script>
	var self = this;
	
	var already_expanded = opts .already_expanded || false;
	var expanded_signal = opts .expanded_signal;
	
	var expand_cue;
	
	self .remembers ('$expanded');
	
	self .remembers ('_expand-cue-icon');
	
	self .stuff .trigger ('$expanded', already_expanded);
	if (already_expanded)
		self .stuff .trigger ('_expand-cue-icon', '');
	else
		self .stuff .trigger ('_expand-cue-icon', '');

	
	self .stuff .on ('$expanded', function (expanded) {
		if (expanded)
			self .stuff .trigger ('_expand-cue-icon', '');
		else
			self .stuff .trigger ('_expand-cue-icon', '');
		self .update ();
		
		if (expanded_signal && expanded_signal !== '$expanded')
			self .stuff .trigger (expanded_signal);
	});
	
	self .on ('mount', function () {
		self .root .classList .add ('item');
		on_next_tick (function () {
			expand_cue = self .root .firstElementChild .firstElementChild;
			expand_cue .addEventListener ('click', function () {
				self .stuff .trigger ('$expanded', ! (self .recalls ('$expanded')));
			});
		});
	});
</script>